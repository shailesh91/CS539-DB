<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_05) on Tue Jan 20 13:27:35 PST 2009 -->
<TITLE>
TupleDesc
</TITLE>

<META NAME="date" CONTENT="2009-01-20">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="TupleDesc";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../simpledb/package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../simpledb/Tuple.html" title="class in simpledb"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../simpledb/TupleIterator.html" title="class in simpledb"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html?simpledb/TupleDesc.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="TupleDesc.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
simpledb</FONT>
<BR>
Class TupleDesc</H2>
<PRE>
java.lang.Object
  <IMG SRC="../resources/inherit.gif" ALT="extended by "><B>simpledb.TupleDesc</B>
</PRE>
<HR>
<DL>
<DT><PRE>public class <B>TupleDesc</B><DT>extends java.lang.Object</DL>
</PRE>

<P>
TupleDesc describes the schema of a tuple.
<P>

<P>
<HR>

<P>

<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../simpledb/TupleDesc.html#TupleDesc(simpledb.Type[])">TupleDesc</A></B>(<A HREF="../simpledb/Type.html" title="class in simpledb">Type</A>[]&nbsp;typeAr)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructor.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../simpledb/TupleDesc.html#TupleDesc(simpledb.Type[], java.lang.String[])">TupleDesc</A></B>(<A HREF="../simpledb/Type.html" title="class in simpledb">Type</A>[]&nbsp;typeAr,
          java.lang.String[]&nbsp;fieldAr)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Constructor.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../simpledb/TupleDesc.html#combine(simpledb.TupleDesc, simpledb.TupleDesc)">combine</A></B>(<A HREF="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</A>&nbsp;td1,
        <A HREF="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</A>&nbsp;td2)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Merge two TupleDescs into one, with td1.numFields + td2.numFields
 fields, with the first td1.numFields coming from td1 and the remaining
 from td2.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../simpledb/TupleDesc.html#equals(java.lang.Object)">equals</A></B>(java.lang.Object&nbsp;o)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Compares the specified object with this TupleDesc for equality.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../simpledb/TupleDesc.html#getFieldName(int)">getFieldName</A></B>(int&nbsp;i)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the (possibly null) field name of the ith field of this TupleDesc.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../simpledb/TupleDesc.html#getSize()">getSize</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../simpledb/Type.html" title="class in simpledb">Type</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../simpledb/TupleDesc.html#getType(int)">getType</A></B>(int&nbsp;i)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gets the type of the ith field of this TupleDesc.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../simpledb/TupleDesc.html#hashCode()">hashCode</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../simpledb/TupleDesc.html#nameToId(java.lang.String)">nameToId</A></B>(java.lang.String&nbsp;name)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Find the index of the field with a given name.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../simpledb/TupleDesc.html#numFields()">numFields</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../simpledb/TupleDesc.html#toString()">toString</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a String describing this descriptor.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, finalize, getClass, notify, notifyAll, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="TupleDesc(simpledb.Type[], java.lang.String[])"><!-- --></A><H3>
TupleDesc</H3>
<PRE>
public <B>TupleDesc</B>(<A HREF="../simpledb/Type.html" title="class in simpledb">Type</A>[]&nbsp;typeAr,
                 java.lang.String[]&nbsp;fieldAr)</PRE>
<DL>
<DD>Constructor.
 Create a new tuple desc with typeAr.length fields with fields of the
 specified types, with associated named fields.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>typeAr</CODE> - array specifying the number of and types of fields in
        this TupleDesc. It must contain at least one entry.<DD><CODE>fieldAr</CODE> - array specifying the names of the fields. Note that names may be null.</DL>
</DL>
<HR>

<A NAME="TupleDesc(simpledb.Type[])"><!-- --></A><H3>
TupleDesc</H3>
<PRE>
public <B>TupleDesc</B>(<A HREF="../simpledb/Type.html" title="class in simpledb">Type</A>[]&nbsp;typeAr)</PRE>
<DL>
<DD>Constructor.
 Create a new tuple desc with typeAr.length fields with fields of the
 specified types, with anonymous (unnamed) fields.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>typeAr</CODE> - array specifying the number of and types of fields in
        this TupleDesc. It must contain at least one entry.</DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="combine(simpledb.TupleDesc, simpledb.TupleDesc)"><!-- --></A><H3>
combine</H3>
<PRE>
public static <A HREF="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</A> <B>combine</B>(<A HREF="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</A>&nbsp;td1,
                                <A HREF="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</A>&nbsp;td2)</PRE>
<DL>
<DD>Merge two TupleDescs into one, with td1.numFields + td2.numFields
 fields, with the first td1.numFields coming from td1 and the remaining
 from td2.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>td1</CODE> - The TupleDesc with the first fields of the new TupleDesc<DD><CODE>td2</CODE> - The TupleDesc with the last fields of the TupleDesc
<DT><B>Returns:</B><DD>the new TupleDesc</DL>
</DD>
</DL>
<HR>

<A NAME="numFields()"><!-- --></A><H3>
numFields</H3>
<PRE>
public int <B>numFields</B>()</PRE>
<DL>
<DD><DL>

<DT><B>Returns:</B><DD>the number of fields in this TupleDesc</DL>
</DD>
</DL>
<HR>

<A NAME="getFieldName(int)"><!-- --></A><H3>
getFieldName</H3>
<PRE>
public java.lang.String <B>getFieldName</B>(int&nbsp;i)
                              throws java.util.NoSuchElementException</PRE>
<DL>
<DD>Gets the (possibly null) field name of the ith field of this TupleDesc.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>i</CODE> - index of the field name to return. It must be a valid index.
<DT><B>Returns:</B><DD>the name of the ith field
<DT><B>Throws:</B>
<DD><CODE>java.util.NoSuchElementException</CODE> - if i is not a valid field reference.</DL>
</DD>
</DL>
<HR>

<A NAME="nameToId(java.lang.String)"><!-- --></A><H3>
nameToId</H3>
<PRE>
public int <B>nameToId</B>(java.lang.String&nbsp;name)
             throws java.util.NoSuchElementException</PRE>
<DL>
<DD>Find the index of the field with a given name.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>name</CODE> - name of the field.
<DT><B>Returns:</B><DD>the index of the field that is first to have the given name.
<DT><B>Throws:</B>
<DD><CODE>java.util.NoSuchElementException</CODE> - if no field with a matching name is found.</DL>
</DD>
</DL>
<HR>

<A NAME="getType(int)"><!-- --></A><H3>
getType</H3>
<PRE>
public <A HREF="../simpledb/Type.html" title="class in simpledb">Type</A> <B>getType</B>(int&nbsp;i)
             throws java.util.NoSuchElementException</PRE>
<DL>
<DD>Gets the type of the ith field of this TupleDesc.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>i</CODE> - The index of the field to get the type of. It must be a valid index.
<DT><B>Returns:</B><DD>the type of the ith field
<DT><B>Throws:</B>
<DD><CODE>java.util.NoSuchElementException</CODE> - if i is not a valid field reference.</DL>
</DD>
</DL>
<HR>

<A NAME="getSize()"><!-- --></A><H3>
getSize</H3>
<PRE>
public int <B>getSize</B>()</PRE>
<DL>
<DD><DL>

<DT><B>Returns:</B><DD>The size (in bytes) of tuples corresponding to this TupleDesc.
 Note that tuples from a given TupleDesc are of a fixed size.</DL>
</DD>
</DL>
<HR>

<A NAME="equals(java.lang.Object)"><!-- --></A><H3>
equals</H3>
<PRE>
public boolean <B>equals</B>(java.lang.Object&nbsp;o)</PRE>
<DL>
<DD>Compares the specified object with this TupleDesc for equality.
 Two TupleDescs are considered equal if they are the same size and if the
 n-th type in this TupleDesc is equal to the n-th type in td.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>equals</CODE> in class <CODE>java.lang.Object</CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>o</CODE> - the Object to be compared for equality with this TupleDesc.
<DT><B>Returns:</B><DD>true if the object is equal to this TupleDesc.</DL>
</DD>
</DL>
<HR>

<A NAME="hashCode()"><!-- --></A><H3>
hashCode</H3>
<PRE>
public int <B>hashCode</B>()</PRE>
<DL>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>hashCode</CODE> in class <CODE>java.lang.Object</CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="toString()"><!-- --></A><H3>
toString</H3>
<PRE>
public java.lang.String <B>toString</B>()</PRE>
<DL>
<DD>Returns a String describing this descriptor. It should be of the form
 "fieldType[0](fieldName[0]), ..., fieldType[M](fieldName[M])", although
 the exact format does not matter.
<P>
<DD><DL>
<DT><B>Overrides:</B><DD><CODE>toString</CODE> in class <CODE>java.lang.Object</CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>String describing this descriptor.</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../simpledb/package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../simpledb/Tuple.html" title="class in simpledb"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../simpledb/TupleIterator.html" title="class in simpledb"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html?simpledb/TupleDesc.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="TupleDesc.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;FIELD&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
