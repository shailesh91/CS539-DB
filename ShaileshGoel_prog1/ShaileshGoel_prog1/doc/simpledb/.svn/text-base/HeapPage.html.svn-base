<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_05) on Tue Jan 20 13:27:35 PST 2009 -->
<TITLE>
HeapPage
</TITLE>

<META NAME="date" CONTENT="2009-01-20">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="HeapPage";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../simpledb/package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../simpledb/HeapFileEncoder.html" title="class in simpledb"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../simpledb/HeapPageId.html" title="class in simpledb"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html?simpledb/HeapPage.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="HeapPage.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
simpledb</FONT>
<BR>
Class HeapPage</H2>
<PRE>
java.lang.Object
  <IMG SRC="../resources/inherit.gif" ALT="extended by "><B>simpledb.HeapPage</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD><A HREF="../simpledb/Page.html" title="interface in simpledb">Page</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public class <B>HeapPage</B><DT>extends java.lang.Object<DT>implements <A HREF="../simpledb/Page.html" title="interface in simpledb">Page</A></DL>
</PRE>

<P>
HeapPage stores pages of HeapFiles and implements the Page interface that
 is used by BufferPool.
<P>

<P>
<DL>
<DT><B>See Also:</B><DD><A HREF="../simpledb/HeapFile.html" title="class in simpledb"><CODE>HeapFile</CODE></A>, 
<A HREF="../simpledb/BufferPool.html" title="class in simpledb"><CODE>BufferPool</CODE></A></DL>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>(package private) &nbsp;int[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../simpledb/HeapPage.html#header">header</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>(package private) &nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../simpledb/HeapPage.html#numSlots">numSlots</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>(package private) &nbsp;<A HREF="../simpledb/HeapPageId.html" title="class in simpledb">HeapPageId</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../simpledb/HeapPage.html#pid">pid</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>(package private) &nbsp;<A HREF="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../simpledb/HeapPage.html#td">td</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>(package private) &nbsp;<A HREF="../simpledb/Tuple.html" title="class in simpledb">Tuple</A>[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../simpledb/HeapPage.html#tuples">tuples</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../simpledb/HeapPage.html#HeapPage(simpledb.HeapPageId, byte[])">HeapPage</A></B>(<A HREF="../simpledb/HeapPageId.html" title="class in simpledb">HeapPageId</A>&nbsp;id,
         byte[]&nbsp;data)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Create a HeapPage from a set of bytes of data read from disk.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../simpledb/HeapPage.html#addTuple(simpledb.Tuple)">addTuple</A></B>(<A HREF="../simpledb/Tuple.html" title="class in simpledb">Tuple</A>&nbsp;t)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds the specified tuple to the page.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../simpledb/HeapPage.html#createEmptyPageData(int)">createEmptyPageData</A></B>(int&nbsp;tableid)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Static method to generate a byte array corresponding to an empty
 HeapPage.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../simpledb/HeapPage.html#deleteTuple(simpledb.Tuple)">deleteTuple</A></B>(<A HREF="../simpledb/Tuple.html" title="class in simpledb">Tuple</A>&nbsp;t)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Delete the specified tuple from the page.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../simpledb/HeapPage.html" title="class in simpledb">HeapPage</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../simpledb/HeapPage.html#getBeforeImage()">getBeforeImage</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return a view of this page before it was modified
        -- used by recovery</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../simpledb/HeapPage.html#getNumEmptySlots()">getNumEmptySlots</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the number of empty slots on this page.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;byte[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../simpledb/HeapPage.html#getPageData()">getPageData</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Generates a byte array representing the contents of this page.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../simpledb/HeapPage.html#getSlot(int)">getSlot</A></B>(int&nbsp;i)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if associated slot on this page is filled.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../simpledb/HeapPageId.html" title="class in simpledb">HeapPageId</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../simpledb/HeapPage.html#id()">id</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Return the id of this page.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../simpledb/HeapPage.html#isDirty()">isDirty</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the tid of the transaction that last dirtied this page, or null if the page is not dirty</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;java.util.Iterator&lt;<A HREF="../simpledb/Tuple.html" title="class in simpledb">Tuple</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../simpledb/HeapPage.html#iterator()">iterator</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../simpledb/HeapPage.html#markDirty(boolean, simpledb.TransactionId)">markDirty</A></B>(boolean&nbsp;dirty,
          <A HREF="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</A>&nbsp;tid)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Marks this page as dirty/not dirty and record that transaction
 that did the dirtying</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;<A HREF="../simpledb/Tuple.html" title="class in simpledb">Tuple</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../simpledb/HeapPage.html#readNextTuple(java.io.DataInputStream, int)">readNextTuple</A></B>(java.io.DataInputStream&nbsp;dis,
              int&nbsp;slotId)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Suck up tuples from the source file.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>private &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../simpledb/HeapPage.html#setSlot(int, boolean)">setSlot</A></B>(int&nbsp;i,
        boolean&nbsp;value)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Abstraction to fill a slot on this page.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Field Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="pid"><!-- --></A><H3>
pid</H3>
<PRE>
<A HREF="../simpledb/HeapPageId.html" title="class in simpledb">HeapPageId</A> <B>pid</B></PRE>
<DL>
<DL>
</DL>
</DL>
<HR>

<A NAME="td"><!-- --></A><H3>
td</H3>
<PRE>
<A HREF="../simpledb/TupleDesc.html" title="class in simpledb">TupleDesc</A> <B>td</B></PRE>
<DL>
<DL>
</DL>
</DL>
<HR>

<A NAME="header"><!-- --></A><H3>
header</H3>
<PRE>
int[] <B>header</B></PRE>
<DL>
<DL>
</DL>
</DL>
<HR>

<A NAME="tuples"><!-- --></A><H3>
tuples</H3>
<PRE>
<A HREF="../simpledb/Tuple.html" title="class in simpledb">Tuple</A>[] <B>tuples</B></PRE>
<DL>
<DL>
</DL>
</DL>
<HR>

<A NAME="numSlots"><!-- --></A><H3>
numSlots</H3>
<PRE>
int <B>numSlots</B></PRE>
<DL>
<DL>
</DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="HeapPage(simpledb.HeapPageId, byte[])"><!-- --></A><H3>
HeapPage</H3>
<PRE>
public <B>HeapPage</B>(<A HREF="../simpledb/HeapPageId.html" title="class in simpledb">HeapPageId</A>&nbsp;id,
                byte[]&nbsp;data)
         throws java.io.IOException</PRE>
<DL>
<DD>Create a HeapPage from a set of bytes of data read from disk.
 The format of a HeapPage is a set of 32-bit header words indicating
 the slots of the page that are in use, plus (BufferPool.PAGE_SIZE/tuple
 size) tuple slots, where tuple size is the size of tuples in this
 database table, which can be determined via <A HREF="../simpledb/Catalog.html#getTupleDesc(int)"><CODE>Catalog.getTupleDesc(int)</CODE></A>.

 The number of 32-bit header words is equal to:
 <p>
 (no. tuple slots / 32) + 1
 <p>
<P>
<DL>

<DT><B>Throws:</B>
<DD><CODE>java.io.IOException</CODE><DT><B>See Also:</B><DD><A HREF="../simpledb/Database.html#getCatalog()"><CODE>Database.getCatalog()</CODE></A>, 
<A HREF="../simpledb/Catalog.html#getTupleDesc(int)"><CODE>Catalog.getTupleDesc(int)</CODE></A>, 
<A HREF="../simpledb/BufferPool.html#PAGE_SIZE"><CODE>BufferPool.PAGE_SIZE</CODE></A></DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="getBeforeImage()"><!-- --></A><H3>
getBeforeImage</H3>
<PRE>
public <A HREF="../simpledb/HeapPage.html" title="class in simpledb">HeapPage</A> <B>getBeforeImage</B>()</PRE>
<DL>
<DD>Return a view of this page before it was modified
        -- used by recovery
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../simpledb/Page.html#getBeforeImage()">getBeforeImage</A></CODE> in interface <CODE><A HREF="../simpledb/Page.html" title="interface in simpledb">Page</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="id()"><!-- --></A><H3>
id</H3>
<PRE>
public <A HREF="../simpledb/HeapPageId.html" title="class in simpledb">HeapPageId</A> <B>id</B>()</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../simpledb/Page.html#id()">Page</A></CODE></B></DD>
<DD>Return the id of this page.  The id is a unique identifier for a page
 that can be used to look up the page on disk or determine if the page
 is resident in the buffer pool.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../simpledb/Page.html#id()">id</A></CODE> in interface <CODE><A HREF="../simpledb/Page.html" title="interface in simpledb">Page</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the PageId associated with this page.</DL>
</DD>
</DL>
<HR>

<A NAME="readNextTuple(java.io.DataInputStream, int)"><!-- --></A><H3>
readNextTuple</H3>
<PRE>
private <A HREF="../simpledb/Tuple.html" title="class in simpledb">Tuple</A> <B>readNextTuple</B>(java.io.DataInputStream&nbsp;dis,
                            int&nbsp;slotId)
                     throws java.util.NoSuchElementException</PRE>
<DL>
<DD>Suck up tuples from the source file.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE>java.util.NoSuchElementException</CODE></DL>
</DD>
</DL>
<HR>

<A NAME="getPageData()"><!-- --></A><H3>
getPageData</H3>
<PRE>
public byte[] <B>getPageData</B>()</PRE>
<DL>
<DD>Generates a byte array representing the contents of this page.
 Used to serialize this page to disk.
 <p>
 The invariant here is that it should be possible to pass the byte
 array generated by getPageData to the HeapPage constructor and
 have it produce an identical HeapPage object.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../simpledb/Page.html#getPageData()">getPageData</A></CODE> in interface <CODE><A HREF="../simpledb/Page.html" title="interface in simpledb">Page</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>A byte array correspond to the bytes of this page.<DT><B>See Also:</B><DD><A HREF="../simpledb/HeapPage.html#HeapPage(simpledb.HeapPageId, byte[])"><CODE>HeapPage(simpledb.HeapPageId, byte[])</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="createEmptyPageData(int)"><!-- --></A><H3>
createEmptyPageData</H3>
<PRE>
public static byte[] <B>createEmptyPageData</B>(int&nbsp;tableid)</PRE>
<DL>
<DD>Static method to generate a byte array corresponding to an empty
 HeapPage.
 Used to add new, empty pages to the file. Passing the results of
 this method to the HeapPage constructor will create a HeapPage with
 no valid tuples in it.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>tableid</CODE> - The id of the table that this empty page will belong to.
<DT><B>Returns:</B><DD>The returned ByteArray.</DL>
</DD>
</DL>
<HR>

<A NAME="deleteTuple(simpledb.Tuple)"><!-- --></A><H3>
deleteTuple</H3>
<PRE>
public boolean <B>deleteTuple</B>(<A HREF="../simpledb/Tuple.html" title="class in simpledb">Tuple</A>&nbsp;t)
                    throws <A HREF="../simpledb/DbException.html" title="class in simpledb">DbException</A></PRE>
<DL>
<DD>Delete the specified tuple from the page.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>t</CODE> - The tuple to delete
<DT><B>Throws:</B>
<DD><CODE><A HREF="../simpledb/DbException.html" title="class in simpledb">DbException</A></CODE> - if this tuple is not on this page, or tuple slot is
         already empty.</DL>
</DD>
</DL>
<HR>

<A NAME="addTuple(simpledb.Tuple)"><!-- --></A><H3>
addTuple</H3>
<PRE>
public void <B>addTuple</B>(<A HREF="../simpledb/Tuple.html" title="class in simpledb">Tuple</A>&nbsp;t)
              throws <A HREF="../simpledb/DbException.html" title="class in simpledb">DbException</A></PRE>
<DL>
<DD>Adds the specified tuple to the page.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>t</CODE> - The tuple to add.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../simpledb/DbException.html" title="class in simpledb">DbException</A></CODE> - if the page is full (no empty slots) or tupledesc
         is mismatch.</DL>
</DD>
</DL>
<HR>

<A NAME="markDirty(boolean, simpledb.TransactionId)"><!-- --></A><H3>
markDirty</H3>
<PRE>
public void <B>markDirty</B>(boolean&nbsp;dirty,
                      <A HREF="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</A>&nbsp;tid)</PRE>
<DL>
<DD>Marks this page as dirty/not dirty and record that transaction
 that did the dirtying
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../simpledb/Page.html#markDirty(boolean, simpledb.TransactionId)">markDirty</A></CODE> in interface <CODE><A HREF="../simpledb/Page.html" title="interface in simpledb">Page</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="isDirty()"><!-- --></A><H3>
isDirty</H3>
<PRE>
public <A HREF="../simpledb/TransactionId.html" title="class in simpledb">TransactionId</A> <B>isDirty</B>()</PRE>
<DL>
<DD>Returns the tid of the transaction that last dirtied this page, or null if the page is not dirty
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../simpledb/Page.html#isDirty()">isDirty</A></CODE> in interface <CODE><A HREF="../simpledb/Page.html" title="interface in simpledb">Page</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>The id of the transaction that last dirtied this page, or null</DL>
</DD>
</DL>
<HR>

<A NAME="getNumEmptySlots()"><!-- --></A><H3>
getNumEmptySlots</H3>
<PRE>
public int <B>getNumEmptySlots</B>()</PRE>
<DL>
<DD>Returns the number of empty slots on this page.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getSlot(int)"><!-- --></A><H3>
getSlot</H3>
<PRE>
public boolean <B>getSlot</B>(int&nbsp;i)</PRE>
<DL>
<DD>Returns true if associated slot on this page is filled.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setSlot(int, boolean)"><!-- --></A><H3>
setSlot</H3>
<PRE>
private void <B>setSlot</B>(int&nbsp;i,
                     boolean&nbsp;value)</PRE>
<DL>
<DD>Abstraction to fill a slot on this page.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="iterator()"><!-- --></A><H3>
iterator</H3>
<PRE>
public java.util.Iterator&lt;<A HREF="../simpledb/Tuple.html" title="class in simpledb">Tuple</A>&gt; <B>iterator</B>()</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>an iterator over all tuples on this page (calling remove on this iterator throws an UnsupportedOperationException)
 (note that this iterator shouldn't return tuples in empty slots!)</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../simpledb/package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../index-all.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../simpledb/HeapFileEncoder.html" title="class in simpledb"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../simpledb/HeapPageId.html" title="class in simpledb"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../index.html?simpledb/HeapPage.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="HeapPage.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
